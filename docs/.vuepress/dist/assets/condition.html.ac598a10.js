import{_ as r,r as p,o as k,c as d,a as n,d as t,w as a,e as c,b as s}from"./app.cd4cbc0d.js";const m={},v=c('<h1 id="\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6" aria-hidden="true">#</a> \u6761\u4EF6</h1><p><code>Flq</code>\u5BF9<code>where</code>\u63D0\u4F9B\u4E86\u66F4\u4E3A\u590D\u6742\u7684\u914D\u7F6E\u65B9\u6CD5\uFF0C\u4EE5\u4FBF\u8FCE\u5408\u5404\u79CD\u573A\u666F\u7684\u9700\u6C42\uFF0C\u5176\u6838\u5FC3\u7279\u6027\u5305\u62EC</p><ul><li><p>Sql \u65B9\u6CD5</p></li><li><p>\u6BD4\u8F83\u7B26</p></li><li><p>\u8FDE\u63A5\u7B26</p></li><li><p>\u63D2\u69FD</p></li><li><p>\u81EA\u5B9A\u4E49 Sql</p></li></ul>',3),b=s("\u5728\u9605\u8BFB\u4E0B\u6587\u524D\uFF0C\u786E\u4FDD\u4F60\u5DF2\u7ECF\u9605\u8BFB\u4E86\u672C\u6587\u6863\u4E2D\u7684"),g=s("\u5165\u95E8"),h=c(`<h2 id="\u57FA\u672C\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u67E5\u8BE2" aria-hidden="true">#</a> \u57FA\u672C\u67E5\u8BE2</h2><p>\u5148\u6765\u56DE\u987E\u4E00\u4E0B\u6700\u7B80\u5355\u7684\u67E5\u8BE2\u6761\u4EF6</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u81EA\u5B9A\u4E49\u8FDE\u63A5\u7B26" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u8FDE\u63A5\u7B26" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u8FDE\u63A5\u7B26</h2><h3 id="\u5168\u5C40\u8FDE\u63A5\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u8FDE\u63A5\u7B26" aria-hidden="true">#</a> \u5168\u5C40\u8FDE\u63A5\u7B26</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;OR&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u5C40\u90E8\u8FDE\u63A5\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5C40\u90E8\u8FDE\u63A5\u7B26" aria-hidden="true">#</a> \u5C40\u90E8\u8FDE\u63A5\u7B26</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token constant">OR</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u4F18\u5148\u7EA7</h3><p>\u5C40\u90E8\u8FDE\u63A5\u7B26 &gt; \u5168\u5C40\u8FDE\u63A5\u7B26</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token constant">AND</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        age<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;OR&#39;</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">OR</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">AND</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u81EA\u5B9A\u4E49\u6BD4\u8F83\u7B26" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6BD4\u8F83\u7B26" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6BD4\u8F83\u7B26</h2><h3 id="\u5168\u5C40\u6BD4\u8F83\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u6BD4\u8F83\u7B26" aria-hidden="true">#</a> \u5168\u5C40\u6BD4\u8F83\u7B26</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;AND&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;!=&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">!=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u5C40\u90E8\u6BD4\u8F83\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5C40\u90E8\u6BD4\u8F83\u7B26" aria-hidden="true">#</a> \u5C40\u90E8\u6BD4\u8F83\u7B26</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;!=&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">!=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4E13\u7528\u6BD4\u8F83\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E13\u7528\u6BD4\u8F83\u7B26" aria-hidden="true">#</a> \u4E13\u7528\u6BD4\u8F83\u7B26</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq
    <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token punctuation">{</span>com<span class="token operator">:</span> <span class="token string">&#39;!=&#39;</span><span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u4F18\u5148\u7EA7-1" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5148\u7EA7-1" aria-hidden="true">#</a> \u4F18\u5148\u7EA7</h2><p>\u4E13\u7528\u6BD4\u8F83\u7B26 &gt; \u5C40\u90E8\u6BD4\u8F83\u7B26 &gt; \u5168\u5C40\u6BD4\u8F83\u7B26</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq
    <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token punctuation">{</span>com<span class="token operator">:</span> <span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;AND&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;!=&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">!=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u7279\u6B8A\u6BD4\u8F83\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7279\u6B8A\u6BD4\u8F83\u7B26" aria-hidden="true">#</a> \u7279\u6B8A\u6BD4\u8F83\u7B26</h2><h3 id="is-null-is-not-null" tabindex="-1"><a class="header-anchor" href="#is-null-is-not-null" aria-hidden="true">#</a> IS NULL/IS NOT NULL</h3><p>\u8BE5\u7C7B\u578B\u7684\u6BD4\u8F83\u7B26\u4E0D\u9700\u8981\u63D0\u4F9B<code>val</code>\u9009\u9879</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token punctuation">{</span>
      com<span class="token operator">:</span> <span class="token string">&#39;IS NULL&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="in-not-in" tabindex="-1"><a class="header-anchor" href="#in-not-in" aria-hidden="true">#</a> IN/NOT IN</h3><p>\u8BE5\u7C7B\u578B\u6BD4\u8F83\u7B26\u8981\u6C42\u4F20\u5165\u6570\u7EC4</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token punctuation">{</span>
      com<span class="token operator">:</span> <span class="token string">&#39;IN&#39;</span><span class="token punctuation">,</span>
      val<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u674E\u56DB&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="between" tabindex="-1"><a class="header-anchor" href="#between" aria-hidden="true">#</a> BETWEEN</h3><p>\u8BE5\u6BD4\u8F83\u7B26\u8981\u6C42\u4F20\u5165\u957F\u5EA6\u4E3A 2 \u7684\u6570\u7EC4</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;student&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token punctuation">{</span>
      com<span class="token operator">:</span> <span class="token string">&#39;BETWEEN&#39;</span><span class="token punctuation">,</span>
      val<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>student<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">BETWEEN</span> <span class="token number">2</span> <span class="token operator">AND</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="slq-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#slq-\u65B9\u6CD5" aria-hidden="true">#</a> Slq \u65B9\u6CD5</h2><p>\u6240\u6709\u53EF\u7528\u7684\u65B9\u6CD5\u53EF\u4EE5\u5728<code>flq/methods</code>\u5305\u4E0B\uFF0C\u9700\u8981\u5BFC\u5165\u4F7F\u7528</p>`,44),f=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token constant"},"FIND_IN_SET"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'flq/functions'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token constant"},"FIND_IN_SET"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"require"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'flq/functions'"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=c(`<p>\u540E\u9762\u7684\u6F14\u793A\u5C06\u7EDF\u4E00\u4F7F\u7528 TypeScript \u7684\u5199\u6CD5\uFF0C\u4F7F\u7528 Node JavaScript \u7684\u81EA\u884C\u6539\u53D8\u76F8\u5173\u8BED\u6CD5</p><ul><li><p>\u65B9\u6CD5\u4F1A\u81EA\u884C\u5224\u65AD\u4F20\u5165\u7684\u53C2\u6570\u662F\u5B57\u6BB5\u8FD8\u662F\u6570\u636E\uFF0C\u4F60\u53EF\u4EE5\u5728\u65B9\u6CD5\u7684 JsDoc \u4E2D\u627E\u5230\u76F8\u5173\u7684\u5B9A\u4E49</p></li><li><p>\u6240\u6709\u7684\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>Sql</code>\u7684\u5B9E\u4F8B\uFF0C<code>Sql</code>\u53EF\u4EE5\u63D2\u5165\u5728\u8BB8\u591A\u4F4D\u7F6E\uFF0C\u5B83\u53EF\u4EE5\u8DF3\u8FC7 Flq \u672C\u8EAB\u7684\u8BED\u6CD5\u89E3\u6790\uFF0C\u76F4\u63A5\u62FC\u63A5\u5230 sql \u4E2D</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>flq<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> db <span class="token operator">=</span> flq<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token constant">FIND_IN_SET</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;teachers&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>sql<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>class<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> FIND_IN_SET<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>teachers<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9664\u4E86 mysql \u5E38\u89C1\u7684\u65B9\u6CD5\u5916\uFF0CFlq \u4E5F\u6709\u4E00\u4E9B\u72EC\u7279\u7684\u65B9\u6CD5\uFF0C\u901A\u5E38\u7528\u4E8E\u63A7\u5236 sql \u7ED3\u6784</p><h3 id="brac" tabindex="-1"><a class="header-anchor" href="#brac" aria-hidden="true">#</a> brac</h3><p><code>brac(option: WhereOption, connector?: WhereOption.Connector, comparator?: WhereOption.Comparator): Sql</code></p><p>\u7528\u4E8E\u63D2\u5165\u4E00\u4E2A\u62EC\u53F7\u3002\u5176\u53C2\u6570\u4E0E<code>flq.where</code>\u5B8C\u5168\u76F8\u540C\uFF0C\u6545\u4E0D\u518D\u6F14\u793A</p><h3 id="comp" tabindex="-1"><a class="header-anchor" href="#comp" aria-hidden="true">#</a> comp</h3><p><code>comp( field: string | Sql, comparator: &#39;BETWEEN&#39;, value0: Sql | Dbany, value1: Sql | Dbany ): Sql</code></p><p><code>comp(field: string | Sql, comparator: WhereOption.NoVal): Sql</code></p><p><code>comp( field: string | Sql, comparator: WhereOption.ArrVal, value: Dbany[] ): Sql</code></p><p><code>comp( field: string | Sql, comparator: WhereOption.Comparator, value: Sql | Dbany ): Sql</code></p><p>\u7528\u4E8E\u63D2\u5165\u4E00\u4E2A\u5E26\u6BD4\u8F83\u7B26\u7684\u8868\u8FBE\u5F0F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>comp<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;flq/methods&#39;</span>

<span class="token function">comp</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;BETWEEN&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token function">comp</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token function">comp</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IN&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">comp</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IS NULL&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">BETWEEN</span> <span class="token number">1</span> <span class="token operator">AND</span> <span class="token number">2</span>
<span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">&lt;</span> <span class="token number">1</span>
<span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">IS</span> <span class="token boolean">NULL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oper" tabindex="-1"><a class="header-anchor" href="#oper" aria-hidden="true">#</a> oper</h3><p><code>oper(...param: (Sql | Operator | string | number)[]): Sql</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>oper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;flq/methods&#39;</span>

<span class="token function">oper</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token function">oper</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;%&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token function">oper</span><span class="token punctuation">(</span><span class="token function">oper</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">%</span> <span class="token number">2</span>
<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>oper</code>\u4F1A\u81EA\u52A8\u5224\u65AD\u8F93\u5165\u503C\u7684\u7C7B\u578B\uFF0C\u5176\u9075\u5FAA\u4EE5\u4E0B\u89C4\u5219</p><ul><li><p>\u4F20\u5165<code>Sql</code></p><p>\u76F4\u63A5\u63D2\u5165</p></li><li><p>\u4F20\u5165\u8FD0\u7B97\u7B26</p><p>\u76F4\u63A5\u63D2\u5165</p></li><li><p>\u4F20\u5165\u5B57\u7B26\u4E32</p><p>\u7528<code>field</code>\u89E3\u6790\u6210\u5B57\u6BB5\u540D</p></li><li><p>\u5176\u4ED6</p><p>\u5C06\u8F6C\u4E3A\u6570\u503C\u7C7B\u578B\u540E\u63D2\u5165</p></li></ul><h3 id="method" tabindex="-1"><a class="header-anchor" href="#method" aria-hidden="true">#</a> method</h3><p><code>method(name: string, ...params: any[]): Sql</code></p><p>\u81EA\u5B9A\u4E49\u65B9\u6CD5</p><p>\u8BE5\u65B9\u6CD5\u4E0D\u80FD\u81EA\u52A8\u63A8\u65AD\u53C2\u6570\u7684\u7C7B\u578B\uFF0C\u4E3A\u4E86\u9632\u6B62 Sql \u6CE8\u5165\uFF0C<code>method</code>\u9ED8\u8BA4\u4F1A\u5BF9\u6240\u6709\u4F20\u5165\u8FDB\u884C\u5B89\u5168\u5904\u7406\uFF0C\u5982\u679C\u9700\u8981\u4F20\u5165\u5B57\u6BB5\u540D\uFF0C\u8BF7\u4F7F\u7528<code>field</code>\u4E3B\u52A8\u58F0\u660E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>field<span class="token punctuation">,</span> escape<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;flq&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>method<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;flq/methods&#39;</span>

<span class="token function">method</span><span class="token punctuation">(</span><span class="token string">&#39;RIGHT&#39;</span><span class="token punctuation">,</span> <span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">RIGHT</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u63D2\u69FD" tabindex="-1"><a class="header-anchor" href="#\u63D2\u69FD" aria-hidden="true">#</a> \u63D2\u69FD</h2><p>\u6709\u65F6\u5019\u67E5\u8BE2\u6761\u4EF6\u7684\u7ED3\u6784\u975E\u5E38\u590D\u6742\uFF0C\u4F46\u53C8\u5FC5\u987B\u5F15\u7528\u5916\u90E8\u7684\u503C\uFF0C\u8FEB\u4F7F\u6211\u4EEC\u4E0D\u5F97\u4E0D\u628A\u7E41\u6742\u7684<code>where</code>\u914D\u7F6E\u7559\u5230\u54CD\u5E94\u56DE\u8C03\u91CC\u9762</p><p>\u63D2\u69FD\u5141\u8BB8\u4F60\u5148\u5B9A\u4E49\u6761\u4EF6\u7ED3\u6784\uFF0C\u518D\u52A8\u6001\u4F20\u503C</p><p>\u53EA\u9700\u5728\u9700\u8981\u5B9A\u4E49\u63D2\u69FD\u7684\u4F4D\u7F6E\u4F20\u5165<code>slot(name: string)</code>\u5373\u53EF</p><p>\u4F8B\u5982\u6211\u60F3\u67E5\u8BE2\u6240\u6709\u6210\u7EE9\u5747\u5927\u4E8E\u63D2\u69FD<code>line</code>\u7684\u5B66\u751F</p>`,33),w=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// \u5C01\u88C5"),s(`
`),n("span",{class:"token keyword"},"const"),s(" db "),n("span",{class:"token operator"},"="),s(` flq
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'student'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"field"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'chinese'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'math'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'english'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
      chinese`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"slot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'line'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
      math`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"slot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'line'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
      english`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"slot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'line'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'AND'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'>'"),s(`
  `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// \u67E5\u8BE2"),s(`
`),n("span",{class:"token keyword"},"const"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  line`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"60"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("h4",{id:"\u7ED3\u679C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7ED3\u679C","aria-hidden":"true"},"#"),s(" \u7ED3\u679C")],-1),E=n("div",{class:"language-sql ext-sql line-numbers-mode"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"SELECT"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("name"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("chinese"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("math"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("english"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token keyword"},"FROM"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("student"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token keyword"},"WHERE"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("chinese"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"60"),s(),n("span",{class:"token operator"},"AND"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("math"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"60"),s(),n("span",{class:"token operator"},"AND"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("english"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"60"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-json5 ext-json5 line-numbers-mode"},[n("pre",{class:"language-json5"},[n("code",null,[n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u5F20\u4E09'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"chinese"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"86"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"math"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"78"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"english"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"65"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u8D75\u516D'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"chinese"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"86"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"math"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"97"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"english"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"78"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u94B1\u4E03'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"chinese"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"91"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"math"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"english"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"86"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u90D1\u516B'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"chinese"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"86"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"math"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"63"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"english"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"75"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("p",null,[s("\u63D2\u69FD\u53EF\u4EE5\u5728\u4EFB\u4F55\u5141\u8BB8\u4F20\u5165"),n("code",null,"Sql"),s("\u7684\u5730\u65B9\u63D2\u5165\uFF0C\u4F46\u63D2\u5165\u7684\u503C\u4E00\u5B9A\u4F1A\u88AB\u5F53\u4F5C\u6570\u636E\u8FDB\u884C\u5B89\u5168\u5904\u7406\uFF0C\u5982\u679C\u4F60\u60F3\u5F80\u63D2\u69FD\u4E2D\u63D2\u5165\u539F\u59CB sql\uFF0C\u8BF7\u4F20\u5165\u4E00\u4E2A"),n("code",null,"Sql"),s("\u5BF9\u8C61")],-1),N=n("p",null,"\u4F8B\u5982\u67E5\u8BE2\u6570\u5B66\u6210\u7EE9\u6BD4\u82F1\u8BED\u6210\u7EE9\u9AD8 20 \u7684\u5B66\u751F",-1),R=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// \u5C01\u88C5"),s(`
`),n("span",{class:"token keyword"},"const"),s(" db "),n("span",{class:"token operator"},"="),s(` flq
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'student'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"field"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'chinese'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'math'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'english'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
      math`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"slot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'math'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'AND'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token string"},"'>'"),s(`
  `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"// \u67E5\u8BE2"),s(`
`),n("span",{class:"token keyword"},"const"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  math`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"oper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'english'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'+'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("h4",{id:"\u7ED3\u679C-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7ED3\u679C-1","aria-hidden":"true"},"#"),s(" \u7ED3\u679C")],-1),O=n("div",{class:"language-sql ext-sql line-numbers-mode"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"SELECT"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("name"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("chinese"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("math"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("english"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token keyword"},"FROM"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("student"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token keyword"},"WHERE"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("math"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("english"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"20"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),L=n("div",{class:"language-json5 ext-json5 line-numbers-mode"},[n("pre",{class:"language-json5"},[n("code",null,[n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u674E\u56DB'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"chinese"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"56"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"math"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"56"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"english"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"23"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u5468\u4E5D'"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"chinese"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"65"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"math"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"57"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"english"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"36"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),W=n("p",null,"\u5F53\u7136\u4E86\uFF0C\u5982\u679C\u53EA\u662F\u4E3A\u4E86\u67E5\u8BE2\u6570\u5B66\u6210\u7EE9\u6BD4\u82F1\u8BED\u6210\u7EE9\u9AD8\u7684\u5B66\u751F\uFF0C\u5B8C\u5168\u6CA1\u6BD4\u8F83\u4F7F\u7528\u8FD9\u4E48\u590D\u6742\u7684\u8BED\u6CD5\uFF0C\u4EE5\u4E0A\u4EC5\u4EC5\u662F\u4E3A\u4E86\u6F14\u793A\u63D2\u5165\u8868\u8FBE\u5F0F\u7684\u53EF\u80FD\u6027",-1),C=n("h2",{id:"\u67E5\u8BE2\u4E3B\u952E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u67E5\u8BE2\u4E3B\u952E","aria-hidden":"true"},"#"),s(" \u67E5\u8BE2\u4E3B\u952E")],-1),I=n("p",null,[s("\u5982\u679C\u53EA\u60F3\u7B80\u5355\u7684\u6839\u636E\u8868\u683C\u7684\u67D0\u4E00\u4E2A\u5B57\u6BB5\u6765\u67E5\u8BE2(\u901A\u5E38\u662F\u4E3B\u952E)\uFF0C\u4F7F\u7528"),n("code",null,"mainKey()"),s("\u65B9\u6CD5\u80FD\u8282\u7701\u5F88\u591A\u4EE3\u7801\uFF0C\u5F53\u7701\u7565\u5B57\u6BB5\u540D\u65F6\uFF0C\u5FC5\u987B\u5728\u6A21\u578B\u4E2D\u5B9A\u4E49")],-1),D=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" db "),n("span",{class:"token operator"},"="),s(" flq"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'student'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"field"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'id'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'name'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"mainKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"const"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" db"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[s("flq"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setModel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  student`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    id`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
      mainKey`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("p",null,[n("strong",null,"\u7ED3\u679C")],-1),H=n("div",{class:"language-sql ext-sql line-numbers-mode"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"SELECT"),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("id"),n("span",{class:"token punctuation"},"`")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token identifier"},[n("span",{class:"token punctuation"},"`"),s("name"),n("span",{class:"token punctuation"},"`")]),s(),n("span",{class:"token keyword"},"FROM"),s(" student "),n("span",{class:"token keyword"},"WHERE"),s(" id "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-json5 ext-json5 line-numbers-mode"},[n("pre",{class:"language-json5"},[n("code",null,[n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property unquoted"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property unquoted"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'\u5F20\u4E09'"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function j(B,G){const i=p("RouterLink"),l=p("CodeGroupItem"),u=p("CodeGroup"),e=p("Apply"),o=p("Result");return k(),d("div",null,[v,n("p",null,[b,t(i,{to:"/guide/introduction.html"},{default:a(()=>[g]),_:1})]),h,t(u,null,{default:a(()=>[t(l,{title:"TypeScript",active:""},{default:a(()=>[f]),_:1}),t(l,{title:"JavaScript"},{default:a(()=>[y]),_:1})]),_:1}),q,t(e,null,{query:a(()=>[w]),_:1}),_,t(o,null,{sql:a(()=>[E]),data:a(()=>[x]),_:1}),S,N,t(e,null,{query:a(()=>[R]),_:1}),T,t(o,null,{sql:a(()=>[O]),data:a(()=>[L]),_:1}),W,C,I,t(e,null,{query:a(()=>[D]),model:a(()=>[F]),_:1}),A,t(o,null,{sql:a(()=>[H]),data:a(()=>[M]),_:1})])}var V=r(m,[["render",j],["__file","condition.html.vue"]]);export{V as default};
